--lpm_mux DEVICE_FAMILY="Cyclone IV GX" LPM_SIZE=2 LPM_WIDTH=25 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 17.1 cbx_lpm_mux 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 25 
SUBDESIGN mux_388
( 
	data[49..0]	:	input;
	result[24..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[24..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data1001w[1..0]	: WIRE;
	w_data1013w[1..0]	: WIRE;
	w_data1025w[1..0]	: WIRE;
	w_data1037w[1..0]	: WIRE;
	w_data1049w[1..0]	: WIRE;
	w_data1061w[1..0]	: WIRE;
	w_data1073w[1..0]	: WIRE;
	w_data1085w[1..0]	: WIRE;
	w_data1097w[1..0]	: WIRE;
	w_data1109w[1..0]	: WIRE;
	w_data1121w[1..0]	: WIRE;
	w_data1133w[1..0]	: WIRE;
	w_data843w[1..0]	: WIRE;
	w_data857w[1..0]	: WIRE;
	w_data869w[1..0]	: WIRE;
	w_data881w[1..0]	: WIRE;
	w_data893w[1..0]	: WIRE;
	w_data905w[1..0]	: WIRE;
	w_data917w[1..0]	: WIRE;
	w_data929w[1..0]	: WIRE;
	w_data941w[1..0]	: WIRE;
	w_data953w[1..0]	: WIRE;
	w_data965w[1..0]	: WIRE;
	w_data977w[1..0]	: WIRE;
	w_data989w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data1133w[1..1]) # ((! sel_node[]) & w_data1133w[0..0])), ((sel_node[] & w_data1121w[1..1]) # ((! sel_node[]) & w_data1121w[0..0])), ((sel_node[] & w_data1109w[1..1]) # ((! sel_node[]) & w_data1109w[0..0])), ((sel_node[] & w_data1097w[1..1]) # ((! sel_node[]) & w_data1097w[0..0])), ((sel_node[] & w_data1085w[1..1]) # ((! sel_node[]) & w_data1085w[0..0])), ((sel_node[] & w_data1073w[1..1]) # ((! sel_node[]) & w_data1073w[0..0])), ((sel_node[] & w_data1061w[1..1]) # ((! sel_node[]) & w_data1061w[0..0])), ((sel_node[] & w_data1049w[1..1]) # ((! sel_node[]) & w_data1049w[0..0])), ((sel_node[] & w_data1037w[1..1]) # ((! sel_node[]) & w_data1037w[0..0])), ((sel_node[] & w_data1025w[1..1]) # ((! sel_node[]) & w_data1025w[0..0])), ((sel_node[] & w_data1013w[1..1]) # ((! sel_node[]) & w_data1013w[0..0])), ((sel_node[] & w_data1001w[1..1]) # ((! sel_node[]) & w_data1001w[0..0])), ((sel_node[] & w_data989w[1..1]) # ((! sel_node[]) & w_data989w[0..0])), ((sel_node[] & w_data977w[1..1]) # ((! sel_node[]) & w_data977w[0..0])), ((sel_node[] & w_data965w[1..1]) # ((! sel_node[]) & w_data965w[0..0])), ((sel_node[] & w_data953w[1..1]) # ((! sel_node[]) & w_data953w[0..0])), ((sel_node[] & w_data941w[1..1]) # ((! sel_node[]) & w_data941w[0..0])), ((sel_node[] & w_data929w[1..1]) # ((! sel_node[]) & w_data929w[0..0])), ((sel_node[] & w_data917w[1..1]) # ((! sel_node[]) & w_data917w[0..0])), ((sel_node[] & w_data905w[1..1]) # ((! sel_node[]) & w_data905w[0..0])), ((sel_node[] & w_data893w[1..1]) # ((! sel_node[]) & w_data893w[0..0])), ((sel_node[] & w_data881w[1..1]) # ((! sel_node[]) & w_data881w[0..0])), ((sel_node[] & w_data869w[1..1]) # ((! sel_node[]) & w_data869w[0..0])), ((sel_node[] & w_data857w[1..1]) # ((! sel_node[]) & w_data857w[0..0])), ((sel_node[] & w_data843w[1..1]) # ((! sel_node[]) & w_data843w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data1001w[] = ( data[38..38], data[13..13]);
	w_data1013w[] = ( data[39..39], data[14..14]);
	w_data1025w[] = ( data[40..40], data[15..15]);
	w_data1037w[] = ( data[41..41], data[16..16]);
	w_data1049w[] = ( data[42..42], data[17..17]);
	w_data1061w[] = ( data[43..43], data[18..18]);
	w_data1073w[] = ( data[44..44], data[19..19]);
	w_data1085w[] = ( data[45..45], data[20..20]);
	w_data1097w[] = ( data[46..46], data[21..21]);
	w_data1109w[] = ( data[47..47], data[22..22]);
	w_data1121w[] = ( data[48..48], data[23..23]);
	w_data1133w[] = ( data[49..49], data[24..24]);
	w_data843w[] = ( data[25..25], data[0..0]);
	w_data857w[] = ( data[26..26], data[1..1]);
	w_data869w[] = ( data[27..27], data[2..2]);
	w_data881w[] = ( data[28..28], data[3..3]);
	w_data893w[] = ( data[29..29], data[4..4]);
	w_data905w[] = ( data[30..30], data[5..5]);
	w_data917w[] = ( data[31..31], data[6..6]);
	w_data929w[] = ( data[32..32], data[7..7]);
	w_data941w[] = ( data[33..33], data[8..8]);
	w_data953w[] = ( data[34..34], data[9..9]);
	w_data965w[] = ( data[35..35], data[10..10]);
	w_data977w[] = ( data[36..36], data[11..11]);
	w_data989w[] = ( data[37..37], data[12..12]);
END;
--VALID FILE
