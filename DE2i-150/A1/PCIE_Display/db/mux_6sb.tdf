--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV GX" LPM_SIZE=2 LPM_WIDTH=10 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 17.1 cbx_lpm_mux 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 10 
SUBDESIGN mux_6sb
( 
	data[19..0]	:	input;
	result[9..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[9..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data184w[1..0]	: WIRE;
	w_data198w[1..0]	: WIRE;
	w_data210w[1..0]	: WIRE;
	w_data222w[1..0]	: WIRE;
	w_data234w[1..0]	: WIRE;
	w_data246w[1..0]	: WIRE;
	w_data258w[1..0]	: WIRE;
	w_data270w[1..0]	: WIRE;
	w_data282w[1..0]	: WIRE;
	w_data294w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data294w[1..1]) # ((! sel_node[]) & w_data294w[0..0])), ((sel_node[] & w_data282w[1..1]) # ((! sel_node[]) & w_data282w[0..0])), ((sel_node[] & w_data270w[1..1]) # ((! sel_node[]) & w_data270w[0..0])), ((sel_node[] & w_data258w[1..1]) # ((! sel_node[]) & w_data258w[0..0])), ((sel_node[] & w_data246w[1..1]) # ((! sel_node[]) & w_data246w[0..0])), ((sel_node[] & w_data234w[1..1]) # ((! sel_node[]) & w_data234w[0..0])), ((sel_node[] & w_data222w[1..1]) # ((! sel_node[]) & w_data222w[0..0])), ((sel_node[] & w_data210w[1..1]) # ((! sel_node[]) & w_data210w[0..0])), ((sel_node[] & w_data198w[1..1]) # ((! sel_node[]) & w_data198w[0..0])), ((sel_node[] & w_data184w[1..1]) # ((! sel_node[]) & w_data184w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data184w[] = ( data[10..10], data[0..0]);
	w_data198w[] = ( data[11..11], data[1..1]);
	w_data210w[] = ( data[12..12], data[2..2]);
	w_data222w[] = ( data[13..13], data[3..3]);
	w_data234w[] = ( data[14..14], data[4..4]);
	w_data246w[] = ( data[15..15], data[5..5]);
	w_data258w[] = ( data[16..16], data[6..6]);
	w_data270w[] = ( data[17..17], data[7..7]);
	w_data282w[] = ( data[18..18], data[8..8]);
	w_data294w[] = ( data[19..19], data[9..9]);
END;
--VALID FILE
